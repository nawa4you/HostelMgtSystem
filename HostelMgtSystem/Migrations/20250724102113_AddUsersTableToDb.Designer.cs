// <auto-generated />
using System;
using HostelMgtSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HostelMgtSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250724102113_AddUsersTableToDb")]
    partial class AddUsersTableToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HostelMgtSystem.Models.Hostel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hostels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Campus",
                            Name = "Pod Living Male Hostel"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Campus",
                            Name = "Coorporative Queens Hostel"
                        },
                        new
                        {
                            Id = 3,
                            Address = "University",
                            Name = "Faith Male Hostel"
                        },
                        new
                        {
                            Id = 4,
                            Address = "University",
                            Name = "Entreprise Male Hostel"
                        },
                        new
                        {
                            Id = 5,
                            Address = "University",
                            Name = "Emerald Male Hostel"
                        },
                        new
                        {
                            Id = 6,
                            Address = "University",
                            Name = "Amethyst Male Hostel"
                        },
                        new
                        {
                            Id = 7,
                            Address = "University",
                            Name = "Trinity Female Hostel"
                        },
                        new
                        {
                            Id = 8,
                            Address = "University",
                            Name = "Redwood Female Hostel"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Campus Drive",
                            Name = "Delano Apartment"
                        });
                });

            modelBuilder.Entity("HostelMgtSystem.Models.PasswordResetRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CodeExpiry")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PasswordResetRequests");
                });

            modelBuilder.Entity("HostelMgtSystem.Models.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HostelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HostelId");

                    b.HasIndex("RoomId");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("HostelMgtSystem.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HostelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HostelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            HostelId = 1,
                            IsAvailable = true,
                            RoomNumber = "101",
                            Type = "Single"
                        },
                        new
                        {
                            Id = 102,
                            HostelId = 1,
                            IsAvailable = true,
                            RoomNumber = "102",
                            Type = "Double"
                        },
                        new
                        {
                            Id = 201,
                            HostelId = 2,
                            IsAvailable = true,
                            RoomNumber = "201",
                            Type = "Single"
                        },
                        new
                        {
                            Id = 202,
                            HostelId = 2,
                            IsAvailable = false,
                            RoomNumber = "202",
                            Type = "Double"
                        },
                        new
                        {
                            Id = 301,
                            HostelId = 3,
                            IsAvailable = true,
                            RoomNumber = "301",
                            Type = "Single"
                        },
                        new
                        {
                            Id = 302,
                            HostelId = 3,
                            IsAvailable = true,
                            RoomNumber = "302",
                            Type = "Double"
                        },
                        new
                        {
                            Id = 303,
                            HostelId = 3,
                            IsAvailable = false,
                            RoomNumber = "303",
                            Type = "Single"
                        },
                        new
                        {
                            Id = 401,
                            HostelId = 4,
                            IsAvailable = true,
                            RoomNumber = "401",
                            Type = "Single"
                        },
                        new
                        {
                            Id = 402,
                            HostelId = 4,
                            IsAvailable = true,
                            RoomNumber = "402",
                            Type = "Double"
                        },
                        new
                        {
                            Id = 403,
                            HostelId = 4,
                            IsAvailable = true,
                            RoomNumber = "403",
                            Type = "Single"
                        },
                        new
                        {
                            Id = 501,
                            HostelId = 5,
                            IsAvailable = true,
                            RoomNumber = "501",
                            Type = "Double"
                        },
                        new
                        {
                            Id = 502,
                            HostelId = 5,
                            IsAvailable = false,
                            RoomNumber = "502",
                            Type = "Single"
                        },
                        new
                        {
                            Id = 503,
                            HostelId = 5,
                            IsAvailable = true,
                            RoomNumber = "503",
                            Type = "Double"
                        },
                        new
                        {
                            Id = 601,
                            HostelId = 6,
                            IsAvailable = true,
                            RoomNumber = "601",
                            Type = "Single"
                        },
                        new
                        {
                            Id = 602,
                            HostelId = 6,
                            IsAvailable = true,
                            RoomNumber = "602",
                            Type = "Double"
                        },
                        new
                        {
                            Id = 603,
                            HostelId = 6,
                            IsAvailable = false,
                            RoomNumber = "603",
                            Type = "Single"
                        },
                        new
                        {
                            Id = 701,
                            HostelId = 7,
                            IsAvailable = true,
                            RoomNumber = "701",
                            Type = "Double"
                        },
                        new
                        {
                            Id = 702,
                            HostelId = 7,
                            IsAvailable = true,
                            RoomNumber = "702",
                            Type = "Single"
                        },
                        new
                        {
                            Id = 703,
                            HostelId = 7,
                            IsAvailable = false,
                            RoomNumber = "703",
                            Type = "Double"
                        },
                        new
                        {
                            Id = 801,
                            HostelId = 8,
                            IsAvailable = true,
                            RoomNumber = "801",
                            Type = "Single"
                        },
                        new
                        {
                            Id = 802,
                            HostelId = 8,
                            IsAvailable = true,
                            RoomNumber = "802",
                            Type = "Double"
                        },
                        new
                        {
                            Id = 803,
                            HostelId = 8,
                            IsAvailable = true,
                            RoomNumber = "803",
                            Type = "Single"
                        },
                        new
                        {
                            Id = 901,
                            HostelId = 9,
                            IsAvailable = true,
                            RoomNumber = "901",
                            Type = "Double"
                        },
                        new
                        {
                            Id = 902,
                            HostelId = 9,
                            IsAvailable = false,
                            RoomNumber = "902",
                            Type = "Single"
                        },
                        new
                        {
                            Id = 903,
                            HostelId = 9,
                            IsAvailable = true,
                            RoomNumber = "903",
                            Type = "Double"
                        });
                });

            modelBuilder.Entity("HostelMgtSystem.Models.RoomProp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomProps");
                });

            modelBuilder.Entity("HostelMgtSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "daniel@gmail.com",
                            Gender = "Male",
                            Level = "N/A",
                            Name = "Daniel Ezinna",
                            PasswordHash = "$2a$11$y8HJdlnpn0MoWczzU1E5SeVRPFIp9TyAYefFHyrTw8dvIZMEvrlM2",
                            PhoneNumber = "08011110001",
                            Role = "Admin",
                            UniqueId = "ADM002"
                        },
                        new
                        {
                            Id = 2,
                            Email = "emmanuel@gmail.com",
                            Gender = "Male",
                            Level = "N/A",
                            Name = "Emmanuel Paul",
                            PasswordHash = "$2a$11$Y39na7fpcNbJskfvjtqPmucmwIYUNQfD8oTcNealyeSeCM9B1DOCy",
                            PhoneNumber = "08011110002",
                            Role = "Admin",
                            UniqueId = "ADM003"
                        },
                        new
                        {
                            Id = 3,
                            Email = "joe@gmail.com",
                            Gender = "Male",
                            Level = "100 Level",
                            Name = "Joe Michaels",
                            PasswordHash = "$2a$11$CksL7hGZv9F3Y3flF6JRTu21cP2qJctSRiZzPjbDrIEUIsOQFffYq",
                            PhoneNumber = "08122220001",
                            Role = "User",
                            UniqueId = "MAT1002"
                        },
                        new
                        {
                            Id = 4,
                            Email = "mark@gmail.com",
                            Gender = "Male",
                            Level = "200 Level",
                            Name = "Mark Spencer",
                            PasswordHash = "$2a$11$vqraBVVkMKVYE.Jl4bGlYOKtqF8dzFy7WBo2ufaLfxDnxzL5wTNV.",
                            PhoneNumber = "08122220002",
                            Role = "User",
                            UniqueId = "MAT2003"
                        },
                        new
                        {
                            Id = 5,
                            Email = "prisca@gmail.com",
                            Gender = "Female",
                            Level = "100 Level",
                            Name = "Prisca Daniels",
                            PasswordHash = "$2a$11$BTiBkEzPeHiiBbu4jj1hJe1oopiUDEgBtFOUuwz64FEpxyHB/iQya",
                            PhoneNumber = "08122220003",
                            Role = "User",
                            UniqueId = "MAT1004"
                        },
                        new
                        {
                            Id = 6,
                            Email = "yamal@gmail.com",
                            Gender = "Male",
                            Level = "300 Level",
                            Name = "Yamal Lamine",
                            PasswordHash = "$2a$11$JplU.flbRIsBX71wk/o99OuNnISC/7qcDt6hN6yY.3cxi5xXHaPP2",
                            PhoneNumber = "08122220004",
                            Role = "User",
                            UniqueId = "MAT3005"
                        },
                        new
                        {
                            Id = 7,
                            Email = "jim@gmail.com",
                            Gender = "Male",
                            Level = "200 Level",
                            Name = "Jim Ray",
                            PasswordHash = "$2a$11$2XpJloN2GhqZ5R7iRrb0MO7UCajglkAEkY4LcQTEKAE3bHsH0Jtk2",
                            PhoneNumber = "08122220005",
                            Role = "User",
                            UniqueId = "MAT2006"
                        },
                        new
                        {
                            Id = 8,
                            Email = "gerald@gmail.com",
                            Gender = "Male",
                            Level = "400 Level",
                            Name = "Gerald Cruz",
                            PasswordHash = "$2a$11$J0YG8eG7S5p780TBKZZzSeYvX9LKa0JPgMX521.sjfZLyTGcirDpi",
                            PhoneNumber = "08122220006",
                            Role = "User",
                            UniqueId = "MAT4007"
                        },
                        new
                        {
                            Id = 9,
                            Email = "susan@gmail.com",
                            Gender = "Female",
                            Level = "100 Level",
                            Name = "Susan Akintola",
                            PasswordHash = "$2a$11$4Y5pooeTU/mM5QW56ZDYye2IO6lkEEHMtPthmRPswZWb5Uibuy.Ia",
                            PhoneNumber = "08033330001",
                            Role = "User",
                            UniqueId = "MAT1008"
                        },
                        new
                        {
                            Id = 10,
                            Email = "grace@gmail.com",
                            Gender = "Female",
                            Level = "200 Level",
                            Name = "Grace Obi",
                            PasswordHash = "$2a$11$xo2vB3lunFpILD48HmSbjeVm3CLGmnYK7qWMlwXko5oji0oJxp9Ea",
                            PhoneNumber = "08033330002",
                            Role = "User",
                            UniqueId = "MAT2009"
                        },
                        new
                        {
                            Id = 11,
                            Email = "emma@gmail.com",
                            Gender = "Female",
                            Level = "300 Level",
                            Name = "Emma Okeke",
                            PasswordHash = "$2a$11$nge9HgCuCe0UB.8ehP.da.VO0IvgvuSb/wzhHqw3t/5.gtkvMPYE.",
                            PhoneNumber = "08033330003",
                            Role = "User",
                            UniqueId = "MAT3010"
                        },
                        new
                        {
                            Id = 12,
                            Email = "chinedu@gmail.com",
                            Gender = "Male",
                            Level = "400 Level",
                            Name = "Chinedu Nwosu",
                            PasswordHash = "$2a$11$2/hH6I9Ndj22NF/qloyZ3.PVo5245MdR0rFGVrZ29tcNW5y50VkL2",
                            PhoneNumber = "08033330004",
                            Role = "User",
                            UniqueId = "MAT4011"
                        },
                        new
                        {
                            Id = 13,
                            Email = "vivian@gmail.com",
                            Gender = "Female",
                            Level = "200 Level",
                            Name = "Vivian Eze",
                            PasswordHash = "$2a$11$ukDFGNInIZKjbQRy6ya8SOWShTqxZ8OddeqXJlm/wZPCB5SCOC.Uu",
                            PhoneNumber = "08033330005",
                            Role = "User",
                            UniqueId = "MAT2012"
                        },
                        new
                        {
                            Id = 14,
                            Email = "kenneth@gmail.com",
                            Gender = "Male",
                            Level = "300 Level",
                            Name = "Kenneth Obi",
                            PasswordHash = "$2a$11$YHtM9X8QI5PH0k0HF0Otue6ODvCgAO5hhaGeWzRbdJTaNHjBZXypq",
                            PhoneNumber = "08033330006",
                            Role = "User",
                            UniqueId = "MAT3013"
                        },
                        new
                        {
                            Id = 15,
                            Email = "linda@gmail.com",
                            Gender = "Female",
                            Level = "100 Level",
                            Name = "Linda George",
                            PasswordHash = "$2a$11$LIPZ0y9fksODRYVPQg2UjusAkzV2vE12xBdW/nDu0284t2kfENbWa",
                            PhoneNumber = "08033330007",
                            Role = "User",
                            UniqueId = "MAT1014"
                        },
                        new
                        {
                            Id = 16,
                            Email = "hassan@gmail.com",
                            Gender = "Male",
                            Level = "100 Level",
                            Name = "Hassan Bello",
                            PasswordHash = "$2a$11$ZPHhMVNLS68sE8RugjnttuWJ9P4BT4x9C.EWfM6lOJihoi7ZduhZK",
                            PhoneNumber = "08033330008",
                            Role = "User",
                            UniqueId = "MAT1015"
                        },
                        new
                        {
                            Id = 17,
                            Email = "blessing@gmail.com",
                            Gender = "Female",
                            Level = "400 Level",
                            Name = "Blessing Ojo",
                            PasswordHash = "$2a$11$mTsRFsI/ExSwnRRtAgT2XuVAfE5ETLUGulTeCQlvgTZaxNHWV1jva",
                            PhoneNumber = "08033330009",
                            Role = "User",
                            UniqueId = "MAT4016"
                        },
                        new
                        {
                            Id = 18,
                            Email = "femi@gmail.com",
                            Gender = "Male",
                            Level = "200 Level",
                            Name = "Femi Adebayo",
                            PasswordHash = "$2a$11$a4Vq6Mlwm33Y6uvEvx2oZ..ftjoJRQ97RZ2VVTeQHGkCf4MdLm1VG",
                            PhoneNumber = "08033330010",
                            Role = "User",
                            UniqueId = "MAT2017"
                        },
                        new
                        {
                            Id = 19,
                            Email = "mary@gmail.com",
                            Gender = "Female",
                            Level = "300 Level",
                            Name = "Mary Akpan",
                            PasswordHash = "$2a$11$Ukpu3jNR28.fZTiPDbmNd.2iDV4P8p92zWPCPshcNm/dM4OlQRtMC",
                            PhoneNumber = "08033330011",
                            Role = "User",
                            UniqueId = "MAT3018"
                        },
                        new
                        {
                            Id = 20,
                            Email = "uche@gmail.com",
                            Gender = "Male",
                            Level = "100 Level",
                            Name = "Uche Okoro",
                            PasswordHash = "$2a$11$ZbjmjuxpwBJqi70Oz2AwteLF.4o9BLh7iouW3eTh3p.U3ILo0prma",
                            PhoneNumber = "08033330012",
                            Role = "User",
                            UniqueId = "MAT1019"
                        });
                });

            modelBuilder.Entity("HostelMgtSystem.Models.Registration", b =>
                {
                    b.HasOne("HostelMgtSystem.Models.Hostel", "Hostel")
                        .WithMany()
                        .HasForeignKey("HostelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HostelMgtSystem.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Hostel");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HostelMgtSystem.Models.Room", b =>
                {
                    b.HasOne("HostelMgtSystem.Models.Hostel", "Hostel")
                        .WithMany("Rooms")
                        .HasForeignKey("HostelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hostel");
                });

            modelBuilder.Entity("HostelMgtSystem.Models.RoomProp", b =>
                {
                    b.HasOne("HostelMgtSystem.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HostelMgtSystem.Models.Hostel", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
